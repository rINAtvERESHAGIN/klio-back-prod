# Generated by Django 2.2.7 on 2020-01-27 16:26

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=256)),
                ('img', models.ImageField(upload_to='')),
                ('content', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('link', models.URLField(blank=True)),
                ('btn', models.BooleanField(default=True)),
                ('btn_text', models.CharField(blank=True, max_length=32)),
                ('btn_color', models.CharField(choices=[('FFFFFF', 'White'), ('000000', 'Black')], default='FFFFFF', max_length=10)),
                ('start_date', models.DateTimeField(help_text='From what date banner should be visible on a site?')),
                ('deadline', models.DateTimeField(help_text='When banner should disappear from a site?')),
                ('activity', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['activity'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('position', models.CharField(choices=[(0, 'Header'), (1, 'Footer'), (2, 'Leftbar')], max_length=2)),
                ('activity', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['activity'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
                ('slug', models.SlugField()),
                ('content', ckeditor.fields.RichTextField()),
                ('activity', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['activity', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriberInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField(help_text='Date to be shown in article')),
                ('start_date', models.DateTimeField(help_text='Date to make article visible on site')),
                ('title', models.CharField(max_length=256)),
                ('slug', models.SlugField()),
                ('img', models.ImageField(upload_to='')),
                ('content', ckeditor.fields.RichTextField()),
                ('activity', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ManyToManyField(to='tags.Tag')),
            ],
            options={
                'ordering': ['activity', '-date'],
            },
        ),
        migrations.CreateModel(
            name='CallbackInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=32)),
                ('phone', models.CharField(help_text='Enter the phone in the format +7(XXX)XXX-XX-XX', max_length=20)),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField(help_text='Date to be shown in article')),
                ('start_date', models.DateTimeField(help_text='Date to make article visible on site')),
                ('title', models.CharField(max_length=256)),
                ('slug', models.SlugField()),
                ('img', models.ImageField(upload_to='')),
                ('content', ckeditor.fields.RichTextField()),
                ('activity', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ManyToManyField(to='tags.Tag')),
            ],
            options={
                'ordering': ['activity', '-date'],
            },
        ),
    ]
